--- 
dom: "Commmon DOM functions, grouped by task (from http://www.wait-till-i.com)\n\n\
  --[Reaching Elements in a Document]--\n  document.getElementById('id'): Retrieves the element with the given id as an\n    object \n  document.getElementsByTagName('tagname'): Retrieves all elements with the\n    tag name tagname and stores them in an array-like list \n\
  --[Reading Element Attributes, Node Values and Other Data]--\n  node.getAttribute('attribute'): Retrieves the value of the attribute with\n    the name attribute \n  node.setAttribute('attribute', 'value'): Sets the value of the attribute\n    with the name attribute to value \n  node.nodeType: Reads the type of the node (1 = element, 3 = text node) \n  node.nodeName: Reads the name of the node (either element name or #textNode) \n  node.nodeValue: Reads or sets the value of the node (the text content in the\n    case of text nodes) \n\
  --[Navigating Between Nodes]--\n  node.previousSibling: Retrieves the previous sibling node and stores it as\n    an object. \n  node.nextSibling: Retrieves the next sibling node and stores it as an\n    object. \n  node.childNodes: Retrieves all child nodes of the object and stores them in\n    an list. here are shortcuts for the first and last child node, named \n    node.firstChild and node.lastChild. \n  node.parentNode: Retrieves the node containing node. \n\
  --[Creating New Nodes]--\n  document.createElement(element): Creates a new element node with the name\n    element. You provide the name as a string. \n  document.createTextNode(string): Creates a new text node with the node value\n    of string. \n  node.cloneNode(bool): Creates and returns a copy (clone) of node. If bool is\n     true, the clone includes clones of all the child nodes of the original. \n  node.appendChild(newNode): Adds newNode as a new (last) child node to node. \n  node.insertBefore(newNode,oldNode): Inserts newNode as a new child node of\n    node before oldNode. \n  node.removeChild(oldNode): Removes the child oldNode from node. \n  node.replaceChild(newNode, oldNode): Replaces the child node oldNode of node\n    with newNode. \n  element.innerHTML: Reads or writes the HTML content of the given  element as\n    a string\xE2\x80\x94including all child nodes with their attributes and text content. \n\
  --[Known browser quirks:]--\n  getAttribute and setAttribute are not reliable. Instead, assign the property of the element object directly: obj.property = value. Furthermore, some attributes are actually reserved words, so instead of class use className and instead of for use HTMLfor.\n  Real DOM compliant browsers will return linebreaks as text nodes in the childNodes collection, make sure to either remove them or test for the nodeType."
