--- 
erb: "INTRODUCTION\n\n  ERB provides an easy to use but powerful templating system for Ruby.\n  Rails/RoR, the web application framework, uses ERB to create views.\n\n\
  EDITORIAL NOTE:\n\n  Shamelessly compiled and copied from:\n  \n  http://ruby-doc.org/stdlib/libdoc/erb/rdoc/classes/ERB.html\n\n\
  RECOGNIZED TAGS\n\n  ERB recognizes certain tags in the provided template and converts \n  them based on the rules below:\n\n    <% Ruby code -- inline with output %>\n    \n    <%= Ruby expression -- replace with result %>\n    \n    <%# comment -- ignored -- useful in testing %>\n    \n    % a line of Ruby code -- treated as <% line %> (optional -- see ERB.new)\n    \n    %% replaced with % if first thing on a line and % processing is used\n    \n    <%% or %%> -- replace with <% or %> respectively\n\n  All other text is passed through ERB filtering unchanged. \n\n\
  ALTERNATIVES\n\n  There are a variety of templating solutions available in various Ruby projects:\n\n    * ERB\xE2\x80\x98s big brother, eRuby, works the same but is written in C for speed;\n    * Erubis is a fast, secure, and very extensible implementation of eRuby\n    * Amrita (smart at producing HTML/XML);\n    * cs/Template (written in C for speed);\n    * RDoc uses its own template engine, which can be reused elsewhere;\n    * and others; search the RAA."
