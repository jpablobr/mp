--- 
eclim: "Note: This cheat is mostly copied from the eclim cheatsheet online available here: http://eclim.sourceforge.net/vim/cheatsheet.html. It's been cut down to just include the parts applicable to Java development.\n\n\
  Global Commands\n\n    * :PingEclim - Pings eclimd server.\n    * :ShutdownEclim - Shuts down eclimd server.\n    * :EclimSettings - View / edit global settings.\n    * :EclimDisable - Temporarily disables communication with eclimd.\n    * :EclimEnable - Re-enables communication with eclimd.\n    * :EclimHelp [helptopic] - View eclim documentation in vim.\n    * :EclimHelpGrep /regex/ - Search the eclim documentation in vim.\n\n\
  Project Commands\n\n    * :ProjectCreate <folder> [-p <project_name>] -n <nature> ... [-d <project_dependency> ...] Create a new project.\n    * :ProjectList - List current projects.\n    * :ProjectSettings [<project>] - View / edit project settings.\n    * :ProjectDelete <project> - Delete a project.\n    * :ProjectRefresh [<project> <project> ...] - Refresh supplied list of projects against the current files on disk. If no project names supplied, refresh the current project.\n    * :ProjectRefreshAll - Refresh all projects.\n    * :ProjectInfo [<project>] - Echos info for the current or supplied project.\n    * :ProjectOpen <project> - Opens a project.\n    * :ProjectClose <project> - Closes a project.\n    * :ProjectNatures [<project>] - View the configured natures for one or all projects.\n    * :ProjectNatureAdd <project> [<nature> ...] - Add one or more natures to a project.\n    * :ProjectNatureRemove <project> [<nature> ...] - Remove one or more natures from a project.\n    * :ProjectCD - Changes the global current working directory to the root directory of the current file\xE2\x80\x99s project (executes a :cd).\n    * :ProjectLCD - Changes the current working directory of the current window to the root directory of the current file\xE2\x80\x99s project (executes a :lcd).\n    * :ProjectTree [<project> <project> ...] - Opens navigable a tree for one or more projects.\n    * :ProjectsTree - Opens a tree containing all projects.\n    * :ProjectGrep /<pattern>/ file_pattern [file_pattern ...] - Issues a vimgrep starting at the root of the current project.\n    * :ProjectGrepAdd /<pattern>/ file_pattern [file_pattern ...] - Issues a vimgrepadd starting at the root of the current project.\n    * :ProjectLGrep /<pattern>/ file_pattern [file_pattern ...] - Issues a lvimgrep starting at the root of the current project.\n    * :ProjectLGrepAdd /<pattern>/ file_pattern [file_pattern ...] - Issues a lvimgrepadd starting at the root of the current project.\n    * :TrackerTicket <ticket_id> - Opens the supplied ticket in your configured web based tracking tool.\n    * :ProjectTodo - Searches project files for todo / fixme patterns and adds them to the location list.\n    * :Todo - Searches the current file for todo / fixme patterns and adds them to the location list.\n\n\
  Ant Commands\n\n    * :Ant [<target> ...] - Execute ant from the current project.\n    * :AntDoc [<element>] - Find and open the documentation for the element under the cursor or the element supplied as an argument.\n    * :Validate - Validate the current ant build file.\n\n\
  Java Commands\n\n    * :JavaGet - Create a java bean getter method.\n    * :JavaSet - Create a java bean setter method.\n    * :JavaGetSet - Create both a java bean getter and setter method.\n    * :JavaConstructor - Creates class constructor, either empty or based on selected class fields.\n    * :JavaImpl - View implementable / overridable methods from super classes and implemented interfaces.\n    * :JavaDelegate - View list of methods that delegate to the field under the cursor.\n    * Generating test method stubs. - Similar to :JavaImpl, but creates test methods.\n    * Executing test cases and viewing the results. - [testcase] Allows you to execute test cases in your favorite build tool.\n    * Executing test cases and viewing the results. - [testcase] Allows you to view the results of a test case.\n    * :JavaImport - Import the class under the cursor.\n    * :JavaSearch [-p <pattern>] [-t <type>] [-x <context>] [-s <scope>] - Search for classes, methods, fields, etc. (With pattern supplied, searches for the element under the cursor).\n    * :JavaSearchContext - Perform a context sensitive search for the element under the cursor.\n    * :JavaCorrect - Suggest possible corrections for a source error.\n    * :JavaRegex - Opens a window for testing java regular expressions.\n    * :JavaDocSearch - Search for javadocs. Same usage as :JavaSearch.\n    * :JavaDocComment - Adds or updates the comments for the element under the cursor.\n    * :JavaFormat - Formats java source code.\n    * :Checkstyle - Invokes checkstyle on the current file.\n    * :Jps - Opens window with information about the currently running java processes.\n    * :Validate - Manually runs source code validation.\n\n\
  Java .classpath Commands\n\n    * :NewSrcEntry <dir> [<dir> ...] - Add a new source dir entry.\n    * :NewProjectEntry <project> [<project> ...] - Add a new project entry.\n    * :NewJarEntry <file> [<file> ...] - Add a jar entry.\n    * :NewVarEntry <VAR/file> [<VAR/file> ...] - Add a new var entry.\n    * :VariableList List available classpath variables and their corresponding values.\n    * :VariableCreate <name> <path> - Creates or updates the variable with the supplied name.\n    * :VariableDelete <name> - Deletes the variable with the supplied name.\n\n\
  Vim Commands\n\n    * :FindCommandDef [<command>] - Finds a command definition.\n    * :FindCommandRef [<command>] - Finds references of a command.\n    * :FindFunctionDef [<function>] - Finds a function definition.\n    * :FindFunctionRef [<function>] - Finds references of a function.\n    * :FindVariableDef [<variable>] - Finds the definition of a global variable.\n    * :FindVariableRef [<variable>] - Finds references of a global variable.\n    * :FindByContext - Finds command, function, or variable based on the context of the element under the cursor.\n    * :VimDoc [<keyword>] - Opens the vim help for a keyword.\n\n\
  Version Control Commands\n\n\
  Note: Currently cvs, subversion, mercurial, and git are supported by the following commands where applicable.\n\n    * :VcsAnnotate - Toggles annotation of the currently versioned file using vim signs.\n    * :VcsInfo - Echos vcs info about the current versioned file.\n    * :VcsLog - Opens a buffer with log information for the current file.\n    * :VcsChangeSet [revision] - Opens a buffer with change set information for the supplied repository version or the current revision of the currently open file.\n    * :VcsDiff [revision] - Performs a vertical diffsplit of the current file against the last committed revision of the current file or the revision supplied.\n    * :VcsCat [revision] - Splits the current file with the contents of the last committed version of the current file or the supplied revision.\n    * :VcsWebLog - Opens the log for the currently versioned file in the configured vcs web app.\n    * :VcsWebAnnotate [revision] - Opens the annotated view for the currently versioned file in the configured vcs web app.\n    * :VcsWebChangeSet [revision] - Opens the change set for the currently versioned file in the configured vcs web app.\n    * :VcsWebDiff [revision, revision] - Opens a diff view for the currently versioned file in the configured in the configured vcs web app.\n\n\
  Misc. Commands\n\n    * :LocateFileEdit [file] - Locates a relative file and opens it via :edit.\n    * :LocateFileSplit [file] - Locates a relative file and opens it via :split.\n    * :LocateFileTab [file] - Locates a relative file and opens it via :tabnew.\n    * :Split file [file ...] - Behaves like the \xE2\x80\x98split\xE2\x80\x99 command, but allows multiple files to be supplied.\n    * :SplitRelative file [file ...] - Like :Split this command provides splitting of multiple files, but this command splits file relative to the file in the current buffer.\n    * :Tabnew file [file ...] - Behaves like :Split, but issues a :tabnew on each file.\n    * :TabnewRelative - file [file ...] - Behaves like :SplitRelative, but issues a :tabnew on each file.\n    * :EditRelative file - Behaves like :SplitRelative, but issues an \xE2\x80\x98edit\xE2\x80\x99 and only supports one file at a time.\n    * :ReadRelative file - Behaves like :SplitRelative, but issues a \xE2\x80\x98read\xE2\x80\x99 and only supports one file at a time.\n    * :ArgsRelative file_pattern [ file_pattern ...] - Behaves like :SplitRelative, but executes \xE2\x80\x98args\xE2\x80\x99.\n    * :ArgAddRelative file_pattern [ file_pattern ...] - Behaves like :SplitRelative, but executes \xE2\x80\x98argadd\xE2\x80\x99.\n    * :VimgrepRelative /regex/ file_pattern [ file_pattern ...] - Executes :vimgrep relative to the current file.\n    * :VimgrepAddRelative /regex/ file_pattern [ file_pattern ...] - Executes :vimgrepadd relative to the current file.\n    * :LvimgrepRelative /regex/ file_pattern [ file_pattern ...] - Executes :lvimgrep relative to the current file.\n    * :LvimgrepAddRelative /regex/ file_pattern [ file_pattern ...] - Executes :lvimgrepadd relative to the current file.\n    * :CdRelative dir - Executes :cd relative to the current file.\n    * :LcdRelative dir - Executes :lcd relative to the current file.\n    * :DiffLastSaved - Performs a diffsplit with the last saved version of the currently modifed file.\n    * :SwapWords - Swaps two words (with cursor placed on the first word). Supports swapping around non-word characters like commas, periods, etc.\n    * :Sign - Toggles adding or removing a vim sign on the current line.\n    * :Signs - Opens a new window containing a list of signs for the current buffer.\n    * :SignClearUser - Removes all vim signs added via :Sign.\n    * :SignClearAll - Removes all vim signs.\n    * :QuickFixClear - Removes all entries from the quick fix window.\n    * :LocationListClear - Removes all entries from the location list window.\n    * Maximize - Toggles maximization of the current window.\n    * Minimize [winnr ...] - Minimizes the current window or the windows corresponding to the window numbers supplied.\n    * Minimize - Restore all minimized windows.\n    * :Buffers - Opens a temporary window with a list of all the currently listed buffers, allowing you to open or remove them.\n    * :Only - Closes all but the current window and any windows excluded by g:EclimOnlyExclude.\n    * :OtherWorkingCopyDiff <project> - Diffs the current file against the same file in another project (one which has the same project relative path).\n    * :OtherWorkingCopyEdit <project> - Like :OtherWorkingCopyDiff, except open the file in the current window.\n    * :OtherWorkingCopySplit <project> - Like :OtherWorkingCopyDiff, except open the file in a new window.\n    * :OtherWorkingCopyTabopen <project> - Like :OtherWorkingCopyDiff, except open the file in a new tab."
